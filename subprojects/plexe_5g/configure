#!/usr/bin/env python3

#
# Copyright (C) 2013-2023 Christoph Sommer <sommer@ccs-labs.org>
#
# Documentation for these modules is at http://veins.car2x.org/
#
# SPDX-License-Identifier: GPL-2.0-or-later
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

"""
Creates Makefile(s) for building this project.
"""
from os import mkdir
from os.path import join, isdir
import subprocess
import sys
# avoid adding __init__.py to src and scripts folders
sys.path.insert(0, "../../src/scripts/")
from library import Library, LibraryChecker

plexe = Library(name="Plexe", library="plexe", default_path="../../",
                versions=["3.1.3"], source_folder="src/plexe",
                lib_folder="src", images_folder="images",
                version_script="print-plexe-version")
veins = Library(name="Veins", library="veins", default_path="../../../veins",
                versions=["5.2"], source_folder="src/veins", lib_folder="src",
                images_folder="images", version_script="print-veins-version")
veins_inet = Library(name="Veins INET 4", library="veins_inet",
                     default_path="../../../veins/subprojects/veins_inet",
                     versions=["5.2"], source_folder="src/veins_inet",
                     lib_folder="src", images_folder="images",
                     version_script="print-veins_inet-version")
inet = Library(name="INET", library="INET", default_path="../../../inet",
               versions=["4.5.0"], source_folder="src/inet", lib_folder="src",
               images_folder="images",
               version_script=["_scripts/get_version", "bin/inet_version"])
simu5g = Library(name="Simu5G", library="simu5g",
                  default_path="../../../simu5g", versions=["1.2.2"],
                  source_folder="src/simu5g", lib_folder="src",
                  images_folder="images", version_script="Version",
                  run_version_script=False, ned_folder="src")

libraries = LibraryChecker()
libraries.add_lib(plexe)
libraries.add_lib(veins)
libraries.add_lib(veins_inet)
libraries.add_lib(inet)
libraries.add_lib(simu5g)

# Start with default flags
makemake_flags = ["-f", "--deep", "--no-deep-includes", "--make-so", "-I", ".", "-o", "plexe_5g", "-O", "out", "-p", "PLEXE_5G"]
run_libs = [join("src", "plexe_5g")]
run_neds = [join("src", "plexe_5g")]
run_imgs = []

libraries.check_libraries(makemake_flags, run_libs, run_neds, run_imgs)

# Start creating files
if not isdir("out"):
    mkdir("out")

f = open(join("out", "config.py"), "w")
f.write("run_libs = %s\n" % repr(run_libs))
f.write("run_neds = %s\n" % repr(run_neds))
f.write("run_imgs = %s\n" % repr(run_imgs))
f.close()

subprocess.check_call(["env", "opp_makemake"] + makemake_flags, cwd="src")

print("Configure done. You can now run 'make'.")
