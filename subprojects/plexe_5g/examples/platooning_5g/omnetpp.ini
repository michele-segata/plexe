[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 10s
num-rngs = 9

ned-path = .
network = PlatooningLte

repeat = 1

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = true

*.playgroundSizeX = 65000m
*.playgroundSizeY = 25000m
*.playgroundSizeZ = 50m

sim-time-limit = 120 s

##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = false

##########################################################
# Obstacle parameters                                    #
##########################################################
*.obstacles.debug = false

##########################################################
#            WorldUtility parameters                     #
##########################################################
*.world.useTorus = false
*.world.use2D = false

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 0.01s
*.manager.host = "localhost"
*.manager.moduleType = "org.car2x.plexe.subprojects.plexe_5g.PlatoonCarLTE"
*.manager.moduleName = "node"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
*.connectionManager.sendDirect = true
*.connectionManager.maxInterfDist = 2600m
*.connectionManager.drawMaxIntfDist = false

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 100mW
*.**.nic.mac1609_4.bitrate = 6Mbps

*.**.nic.mac1609_4.useAcks = true
*.**.nic.mac1609_4.ackErrorRate = 0.0
*.**.nic.mac1609_4.frameErrorRate = 0.0

*.**.nic.phy80211p.minPowerLevel = -94dBm
*.**.nic.phy80211p.maxTXPower = 100mW
*.**.nic.phy80211p.useNoiseFloor = true
*.**.nic.phy80211p.noiseFloor = -95dBm
*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
*.**.nic.phy80211p.usePropagationDelay = true

##########################################################
#                    channel parameters                  #
##########################################################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

# PhyLayer & Feedback parameters
**.lteNic.channelModel.shadowing = false
**.lteNic.channelModel.fading = false

**.lteNic.phy.channelModel=xmldoc("config_channel.xml")
**.feedbackComputation = xmldoc("config_channel.xml")

##########################################################
#              LTE specific parameters                   #
##########################################################

# Enable dynamic association of UEs (based on best SINR)
**.dynamicCellAssociation = true

# enable handover
**.lteNic.phy.enableHandover = true

# configure parameters of the two eNB
**.eNodeB1.macCellId = 1
**.eNodeB1.macNodeId = 1
**.eNodeB2.macCellId = 2
**.eNodeB2.macNodeId = 2

# connect each car to the first eNB. handover will then take place
**.node[*].masterId = 1
**.node[*].macCellId = 1

# X2 configuration
*.eNodeB*.numX2Apps = 1    # one x2App per peering eNodeB
*.eNodeB*.x2App[*].server.localPort = 5000 + ancestorIndex(1) # Server ports (x2App[0]=5000, x2App[1]=5001, ...)
*.eNodeB1.x2App[0].client.connectAddress = "eNodeB2%x2ppp0"
*.eNodeB2.x2App[0].client.connectAddress = "eNodeB1%x2ppp0"

# positioning and mobility
*.eNodeB*.mobility.initFromDisplayString = false

*.eNodeB1.mobility.initialX = 0m
*.eNodeB1.mobility.initialY = 224m
*.eNodeB2.mobility.initialX = 1400m
*.eNodeB2.mobility.initialY = 224m

*.eNodeB*.nicType = "LteNicEnbD2D"
**.amcMode = "D2D"

# --- Select CQI for D2D transmissions --- #
#
# One-to-Many commulteNications work with fixed CQI values only. Set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
**.usePreconfiguredTxParams = true
**.d2dCqi = 7

############### Transmission Power ##################
**.ueTxPower = 26
**.eNodeBTxPower = 40

**.eNodeB*.lteNic.phy.targetBler = 0.004

##########################################################
#                    channel parameters                  #
##########################################################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

################### MAC parameters #######################
**.mac.queueSize = 1MiB
**.mac.maxBytesPerTti = 1KiB
**.mac.macDelay.result-recording-modes = all
**.mac.macThroughput.result-recording-modes = all

################ PhyLayer parameters #####################
**.lteNic.phy.channelModel=xmldoc("config_channel.xml")
**.feedbackComputation = xmldoc("config_channel.xml")

################ Mobility parameters #####################
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m

################# Deployer parameters #######################
**.fbDelay = 1
**.deployer.positionUpdateInterval = 0.001s
**.deployer.broadcastMessageInterval = 1s
**.deployer.ruRange = 50
**.deployer.ruTxPower = "50,50,50;"
**.deployer.antennaCws = "2;" # !!MACRO + RUS (numRus + 1)
**.deployer.numRbDl = 25
**.deployer.numRbUl = 25
**.numBands = 25

############### AMC Parameters ###############
**.rbAllocationType = "localized"

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].mobility.x = 0
*.node[*].mobility.y = 0
*.node[*].mobility.z = 1.895
*.node[*].mobility.initFromDisplayString = true

*.node[*].traciMobility.x = 0
*.node[*].traciMobility.y = 0
*.node[*].traciMobility.z = 1.895

##########################################################
#                    Seeds and PRNGs                     #
##########################################################
seed-set = ${repetition}
**.seed = ${repetition}

*.node[*].prot.rng-0 = 5
*.node[*].appl.rng-0 = 6
*.node[*].scenario.rng-0 = 7
**.traffic.rng-0 = 8


#launch config. tells Veins which SUMO configuration to run
*.manager.configFile = "./sumocfg/indy.sumo.cfg"
*.manager.launchConfig = xmldoc("./sumocfg/indy.launchd.xml")

##########################################################
#                   Common parameters                    #
##########################################################

**.numberOfCars = ${nCars = 8}
**.numberOfCarsPerPlatoon = ${platoonSize = 4}
**.numberOfLanes = ${nLanes = 1}

##########################################################
#                    Position helper                     #
##########################################################

*.node[*].helper_type = "PositionHelper"

##########################################################
#               Scenario common parameters               #
##########################################################

#controller and engine related parameters
*.node[*].scenario.caccC1 = 0.5
*.node[*].scenario.caccXi = 1
*.node[*].scenario.caccOmegaN = 0.2 Hz
*.node[*].scenario.engineTau = 0.5 s
*.node[*].scenario.ploegH = ${ploegH = 0.5}s
*.node[*].scenario.ploegKp = 0.2
*.node[*].scenario.ploegKd = 0.7
*.node[*].scenario.useRealisticEngine = false
#via wireless send acceleration computed by the controller, not the actual one
*.node[*].scenario.useControllerAcceleration = true
*.node[*].scenario.nLanes = ${nLanes}

#controllers to be tested
**.numericController = ${controller = 1, 2}
*.node[*].scenario.targetController = ${sController = "CACC", "PLOEG" ! controller}

#headway for ACCs
**.headway = ${headway = 0.1, 0.1 ! controller}s
*.node[*].scenario.accHeadway = ${headway}s
*.node[*].scenario.leaderHeadway = ${leaderHeadway = 1.2}s

#average leader speed
*.node[*].scenario.leaderSpeed = ${leaderSpeed = 100}kmph

##########################################################
#                      Application                       #
##########################################################

*.node[*].appl_type = "GeneralPlatooningApp"
#enable statistics recording for the application
*.node[*].appl.*.scalar-recording = true
*.node[*].appl.*.vector-recording = true
#use the join at back implementation of the join maneuver
*.node[*].appl.joinManeuver = "JoinAtBack"
*.node[*].appl.mergeManeuver = "MergeAtBack"

##########################################################
#                Communication protocols                 #
##########################################################

*.node[*].protocol_type = "SimplePlatooningBeaconing"
#enable statistics recording for the network layer
*.node[*].prot.*.scalar-recording = true
*.node[*].prot.*.vector-recording = true
#set the beaconing interval to be 0.1s
*.node[*].prot.beaconingInterval = ${beaconInterval = 0.1}s
#access category for platooning beacons
*.node[*].prot.priority = ${priority = 4}
#packet size for platooning beacon
*.node[*].prot.packetSize = ${packetSize = 200}

##########################################################
#                    Traffic manager                     #
##########################################################

**.traffic_type = "PlatoonsTrafficManager"
#insert platooning vehicles at time
**.traffic.platoonInsertTime = 1 s
#insert platooning vehicles with a speed of
**.traffic.platoonInsertSpeed = ${leaderSpeed}kmph
#insert nCars platooning vehicles
**.traffic.nCars = ${nCars}
#let platoonSize cars per platoon
**.traffic.platoonSize = ${platoonSize}
#use nLanes lanes
**.traffic.nLanes = ${nLanes}
#SUMO vtype for platooning vehicles
**.traffic.platooningVType = "vtypeauto"
#insert vehicles already at steady-state. distance depends on controller
**.traffic.platoonInsertDistance = ${5, 2, 15, 5 ! controller}m
**.traffic.platoonInsertHeadway = ${0, 0.5, 0.8, 0 ! controller}s
**.traffic.platoonLeaderHeadway = ${leaderHeadway}s
**.traffic.platoonAdditionalDistance = 500m
**.traffic.controller = ${sController}

##########################################################
#                       INET stack                       #
##########################################################

*.node[*].ipv4.configurator.typename = "inet.networklayer.configurator.ipv4.HostAutoConfigurator"
*.node[*].ipv4.configurator.interfaces = "cellular"
*.node[*].ipv4.configurator.addressBase = "10.0.0.0"
*.node[*].ipv4.configurator.netmask = "255.0.0.0"
*.node[*].ipv4.configurator.mcastGroups = "224.0.0.1"

# each car has a single tcp app
*.node[*].numApps = 1

# Transmitter
*.node[*].app[0].typename = "PlatooningCoordinationApp"
*.node[*].app[0].localPort = 3088+ancestorIndex(0)
*.node[*].app[0].startTime = 2s
*.node[*].app[0].connectAddress = "trafficAuthority" # IP address of the traffic authority
*.node[*].app[0].destPort = 3000
*.node[*].app[0].dataTransferMode = "object"

*.trafficAuthority.numApps = 1
*.trafficAuthority.app[0].typename = "PlatoonTrafficAuthority"
*.trafficAuthority.app[0].localPort = 3000

#disable statistics recording for all other modules
**.scalar-recording = false
**.vector-recording = false

[Config CV2XMerge]
*.manager.command = "sumo-gui"

#use the base scenario
*.node[*].scenario_type = "ManeuverScenario"

output-vector-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/${configname}_${controller}_${headway}_${repetition}.sca

[Config CV2XMergeNoGui]
extends = CV2XMerge

*.manager.command = "sumo"
*.manager.ignoreGuiCommands = true
#force the config name in the output file to be the same as for the gui experiment
output-vector-file = ${resultdir}/CV2XMerge_${controller}_${headway}_${repetition}.vec
output-scalar-file = ${resultdir}/CV2XMerge_${controller}_${headway}_${repetition}.sca
